{"version":3,"file":"static/js/518.1708f7d7.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/Validation/Validation.styled.jsx","components/Validation/Validation.jsx","components/FormContacts/Form.jsx","components/ItemContacts/ItemContacts.jsx","redux/filter/selectors.js","components/ListContacts/ListContacts.jsx","components/FilterSearch/FilterSearch.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/Loader/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoadingAddBtn = state => state.contacts.isLoadingAddBtn;\n\nexport const selectIsLoadingDeleteBtn = state =>\n  state.contacts.isLoadingDeleteBtn;\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.span`\n  display: block;\n  color: red; ;\n`;\n","import { ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ErrorText } from './Validation.styled';\n\nconst nameRules = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst numberRules =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nexport const schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Too Short!')\n    .max(24, 'Too Long!')\n    .matches(nameRules, {\n      message:\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    })\n    .required('Please enter name'),\n  number: yup\n    .string()\n    .matches(numberRules, {\n      message:\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    })\n    .required('Please enter number'),\n});\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { Formik, Field, Form } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { Box, TextField } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { FormError, schema } from 'components/Validation/Validation';\nimport { selectIsLoadingAddBtn } from 'redux/contacts/contactsSelectors';\n\nexport const ContactForm = () => {\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoadingAddBtn = useSelector(selectIsLoadingAddBtn);\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  // react-toastify\n  const notifyAddContact = () =>\n    toast.success('Contact add!', {\n      position: 'bottom-left',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n\n  const notifyErrorAddContact = nameContact =>\n    toast.error(`${nameContact} is already in contacts`, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n\n  const handleSubmit = (value, actions) => {\n    const findName = contacts.find(\n      contact => contact.name.toLowerCase() === value.name.toLowerCase()\n    );\n\n    if (findName) {\n      notifyErrorAddContact(value.name);\n      // alert(`${value.name} is already in contacts`);\n      return;\n    }\n\n    const body = {\n      name: value.name,\n      number: value.number,\n    };\n\n    dispatch(addContact(body));\n    notifyAddContact();\n\n    actions.resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form autoComplete=\"off\">\n            <Box sx={{ px: 20, py: 4, mt: 4 }}>\n              <Field\n                as={TextField}\n                label=\"Name\"\n                type=\"text\"\n                id={nameInputId}\n                name=\"name\"\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                helperText={<FormError name=\"name\" />}\n              />\n              <Field\n                as={TextField}\n                label=\"Number\"\n                type=\"tel\"\n                name=\"number\"\n                id={numberInputId}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                helperText={<FormError name=\"number\" />}\n              />\n              <LoadingButton\n                sx={{ mt: 2 }}\n                type=\"submit\"\n                endIcon={<AddIcon />}\n                loading={isLoadingAddBtn}\n                loadingPosition=\"end\"\n                variant=\"contained\"\n              >\n                Add contact\n              </LoadingButton>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { LoadingButton } from '@mui/lab';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ImageIcon from '@mui/icons-material/Image';\nimport {\n  ListItem,\n  Divider,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n} from '@mui/material';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { selectIsLoadingDeleteBtn } from 'redux/contacts/contactsSelectors';\n\nexport const ItemContacts = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const isLoadingDelete = useSelector(selectIsLoadingDeleteBtn);\n\n  // notify for react-toastify\n  const notify = () =>\n    toast.info('Contact deleted!', {\n      position: 'bottom-left',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n\n    notify();\n  };\n\n  return (\n    <>\n      <ListItem id={contact.id}>\n        <ListItemAvatar>\n          <Avatar>\n            <ImageIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={contact.name} secondary={contact.number} />\n        <LoadingButton\n          size=\"small\"\n          onClick={handleDelete}\n          loading={isLoadingDelete}\n          loadingPosition=\"start\"\n          startIcon={<DeleteIcon />}\n          variant=\"contained\"\n        >\n          Delete\n        </LoadingButton>\n      </ListItem>\n      <Divider component=\"li\" />\n    </>\n  );\n};\n\nItemContacts.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nexport const selectFilter = state => state.filter.filterValue;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    // console.log('Calculating visible tasks. Now memoized!');\n\n    const constNormalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(constNormalizedFilter)\n    );\n  }\n);\n","import { useSelector } from 'react-redux';\nimport { Box, List } from '@mui/material';\nimport { ItemContacts } from 'components/ItemContacts/ItemContacts';\nimport { selectVisibleContacts } from 'redux/filter/selectors';\n\nexport const ListContacts = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <Box sx={{ textAlign: 'center', px: 10 }}>\n      <List\n        sx={{\n          width: '100%',\n          bgcolor: 'background.paper',\n        }}\n      >\n        {contacts.map(contact => (\n          <ItemContacts key={contact.id} contact={contact} />\n        ))}\n      </List>\n    </Box>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filter/filterSlice';\nimport { Box, Input } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const ariaLabel = { 'aria-label': 'description' };\n\n  const handleChange = e => {\n    const searchText = e.target.value;\n    dispatch(filterContacts(searchText));\n  };\n\n  return (\n    <Box\n      component=\"div\"\n      sx={{\n        '& > :not(style)': { my: 3, width: '660px' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Input\n        placeholder=\"Find contacts by name\"\n        inputProps={ariaLabel}\n        type=\"search\"\n        fullWidth\n        onChange={handleChange}\n      />\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ErrorTitle = styled.h2`\n  color: red;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectError } from 'redux/contacts/contactsSelectors';\nimport { ErrorTitle } from './Error.styled';\n\nexport const Error = () => {\n  const errorValue = useSelector(selectError);\n  return <ErrorTitle>{errorValue} :(</ErrorTitle>;\n};\n","import { useSelector } from 'react-redux';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { Box } from '@mui/material';\nimport { selectIsLoading } from 'redux/contacts/contactsSelectors';\n\nexport const Loader = () => {\n  const isLoading = useSelector(selectIsLoading);\n  return (\n    <Box>\n      <RotatingLines\n        strokeColor=\"#66B2FF\"\n        strokeWidth=\"4\"\n        animationDuration=\"0.75\"\n        width=\"58\"\n        visible={isLoading}\n      />\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Container, Typography, Divider } from '@mui/material';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectError, selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { ContactForm } from 'components/FormContacts/Form';\nimport { ListContacts } from 'components/ListContacts/ListContacts';\nimport { Filter } from 'components/FilterSearch/FilterSearch';\nimport { Error } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box component=\"main\">\n      <Container maxWidth=\"md\" sx={{ textAlign: 'center', mt: 10 }}>\n        <Box sx={{ pt: 4 }}>\n          <Typography variant=\"h2\" component=\"h1\">\n            Phone Book\n          </Typography>\n          <Divider />\n          <ContactForm />\n          <Typography variant=\"h4\" component=\"h3\">\n            My Contacts\n          </Typography>\n          <Filter />\n          {isLoading && !error && <Loader />}\n          {error && <Error />}\n          {!isLoading && <ListContacts />}\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectIsLoadingAddBtn","isLoadingAddBtn","selectIsLoadingDeleteBtn","isLoadingDeleteBtn","ErrorText","styled","schema","yup","shape","name","min","max","matches","message","required","number","FormError","render","ContactForm","nameInputId","nanoid","numberInputId","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","value","actions","nameContact","find","contact","toLowerCase","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","body","addContact","resetForm","autoComplete","Box","sx","px","py","mt","as","TextField","label","type","id","fullWidth","variant","margin","helperText","LoadingButton","endIcon","Add","loading","loadingPosition","ItemContacts","isLoadingDelete","ListItem","ListItemAvatar","Avatar","Image","ListItemText","primary","secondary","size","onClick","deleteContact","startIcon","Delete","Divider","component","selectVisibleContacts","createSelector","filter","filterValue","constNormalizedFilter","includes","ListContacts","textAlign","List","width","bgcolor","map","Filter","my","noValidate","Input","placeholder","inputProps","onChange","e","searchText","target","filterContacts","ErrorTitle","Error","errorValue","Loader","strokeColor","strokeWidth","animationDuration","visible","Contacts","useEffect","fetchContacts","Container","maxWidth","pt","Typography"],"sourceRoot":""}