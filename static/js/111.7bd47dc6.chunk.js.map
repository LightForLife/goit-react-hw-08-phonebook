{"version":3,"file":"static/js/111.7bd47dc6.chunk.js","mappings":"4cA0BaA,EAAY,WACvB,MAA4BC,EAAAA,SAAe,CACzCC,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRC,YAAa,GACbC,cAAc,IALhB,eAAOC,EAAP,KAAeC,EAAf,KAQMC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAElBE,GAAWC,EAAAA,EAAAA,MAyBXC,EAA0B,WAC9BN,GAAU,kBACLD,GADI,IAEPD,cAAeC,EAAOD,eAEzB,EAEKS,EAA0B,SAAAC,GAC9BA,EAAMC,gBACP,EAED,OACE,+BACE,SAACC,EAAA,GAAD,CACEC,GAAI,CAAEC,GAAI,IACVC,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,UAAWC,EAAAA,EACXC,UAAW,EACXC,QAAM,EARR,UAUE,UAACC,EAAA,EAAD,CACEV,GAAI,CACFW,GAAI,EACJC,GAAI,EACJC,QAAS,OACTC,cAAe,SACfC,WAAY,UANhB,WASE,SAACC,EAAA,EAAD,CAAQhB,GAAI,CAAEiB,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYd,UAAU,KAAKe,QAAQ,KAAnC,sBAIA,SAAC,KAAD,CACEC,SAzDW,SAACC,EAAOC,GAC3B,IAAMC,EAAO,CACXC,MAAOH,EAAMG,MACb1C,SAAUuC,EAAMvC,UAGlBS,GAASkC,EAAAA,EAAAA,IAAMF,IAEfD,EAAQI,YAERvC,GAAU,kBAAKD,GAAN,IAAcJ,SAAU,KAClC,EA+CS6C,cA/DY,CACpBH,MAAO,GACP1C,SAAU,IA8DF8C,iBAAkBC,EAAAA,KAAaC,MAAM,CACnCN,MAAOK,EAAAA,KAEJE,SAAS,sBACTP,MAAM,iBACT1C,SAAU+C,EAAAA,KAAaE,SAAS,kCARpC,SAYG,gBAvDUC,EAuDPC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAAC,KAAD,CAAMC,aAAa,MAAnB,WACE,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJvC,GAAI,CAAEC,GAAI,QACVuC,WAAS,EACTC,GAAInD,EACJoD,MAAM,QACNrB,QAAQ,WACRsB,KAAK,QACLC,YAAY,gBACZC,KAAK,QACLR,aAAa,MACbS,MAAOC,QAAQZ,EAAOT,QAAUqB,QAAQX,EAAQV,OAChDsB,WAAYD,QAAQX,EAAQV,QAAUS,EAAOT,SAE/C,UAAC,KAAD,CACEY,GAAIW,EAAAA,EACJT,WAAS,EACTxC,GAAI,CAAEC,GAAI,QACV6C,MAAOC,QAAQZ,EAAOnD,WAAa+D,QAAQX,EAAQpD,UACnDkE,WAAYd,EAAQpD,UAAYmD,EAAOnD,SALzC,WAOE,SAACmE,EAAA,EAAD,CAAYC,QAAS5D,EAArB,uBACA,SAAC6D,EAAA,EAAD,CACEZ,GAAIjD,EACJqD,KAAMzD,EAAOD,aAAe,OAAS,WACrCoC,MAAOnC,EAAOJ,SACd2D,KAAK,WACLW,UApFGpB,EAoFoB,WApFZ,SAAArC,GAC3BR,GAAU,kBAAKD,GAAN,cAAe8C,EAAOrC,EAAM0D,OAAOhC,QAC7C,GAmFiBc,aAAa,mBACbmB,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,CACE,aAAW,6BACXC,QAASjE,EACTkE,YAAajE,EACbkE,KAAK,MACL,mBAAiB,uBALnB,SAOG1E,EAAOD,cACN,SAAC4E,EAAA,EAAD,KAEA,SAACC,EAAA,EAAD,QAKRtB,MAAM,aAEPP,EAAOnD,WACN,SAACiF,EAAA,EAAD,CAAgBxB,GAAG,uBAAnB,SACGN,EAAOnD,eAId,SAACkF,EAAA,EAAD,CACE1B,WAAS,EACTK,KAAK,SACLxB,QAAQ,YACRrB,GAAI,CAAEC,GAAI,QAJZ,sBAxDH,KAmEH,UAACF,EAAA,GAAD,CAAMoE,WAAS,EAACnE,GAAI,CAAEC,GAAI,GAA1B,WACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,UACE,SAACiB,EAAA,EAAD,CAAYC,QAAQ,QAApB,UACE,SAAC,KAAD,oCAGJ,SAACtB,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACkB,EAAA,EAAD,CAAYC,QAAQ,QAApB,UACE,SAAC,KAAD,CAAS+C,GAAG,YAAZ,SACG,gDASlB,ECnMc,SAASC,IACtB,OACE,UAACtE,EAAA,GAAD,CAAMoE,WAAS,EAAC7D,UAAU,OAAON,GAAI,CAAEsE,eAAgB,gBAAvD,WACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,0CAGJ,SAACzF,EAAD,MAGL,C,0BCbG0F,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,MAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,gOACD,gBAEJN,EAAQ,EAAUG,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx","../node_modules/@mui/icons-material/LockOutlined.js"],"sourcesContent":["import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport {\n  Box,\n  TextField,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  Grid,\n  Paper,\n  Avatar,\n  Typography,\n  Button,\n  FormHelperText,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { Formik, Field, Form } from 'formik';\nimport { logIn } from 'redux/auth/authOperations';\n\nexport const LoginForm = () => {\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const dispatch = useDispatch();\n\n  // Formik\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (value, actions) => {\n    const body = {\n      email: value.email,\n      password: value.password,\n    };\n\n    dispatch(logIn(body));\n\n    actions.resetForm();\n\n    setValues({ ...values, password: '' });\n  };\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({\n      ...values,\n      showPassword: !values.showPassword,\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <>\n      <Grid\n        sx={{ mt: 20 }}\n        item\n        xs={12}\n        sm={8}\n        md={5}\n        component={Paper}\n        elevation={6}\n        square\n      >\n        <Box\n          sx={{\n            py: 8,\n            px: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n\n          <Formik\n            onSubmit={handleSubmit}\n            initialValues={initialValues}\n            validationSchema={yup.object().shape({\n              email: yup\n                .string()\n                .required('Please enter email')\n                .email('Invalid email'),\n              password: yup.string().required('Password is a required field'),\n              // .min(7, 'Password should be minimum 7 characters long'),\n            })}\n          >\n            {({ errors, touched }) => (\n              <Form autoComplete=\"off\">\n                <Field\n                  as={TextField}\n                  sx={{ mt: '20px' }}\n                  fullWidth\n                  id={emailInputId}\n                  label=\"Email\"\n                  variant=\"outlined\"\n                  name=\"email\"\n                  placeholder=\"jane@acme.com\"\n                  type=\"email\"\n                  autoComplete=\"off\"\n                  error={Boolean(errors.email) && Boolean(touched.email)}\n                  helperText={Boolean(touched.email) && errors.email}\n                />\n                <Field\n                  as={FormControl}\n                  fullWidth\n                  sx={{ mt: '20px' }}\n                  error={Boolean(errors.password) && Boolean(touched.password)}\n                  helpertext={touched.password && errors.password}\n                >\n                  <InputLabel htmlFor={passwordInputId}>Password</InputLabel>\n                  <OutlinedInput\n                    id={passwordInputId}\n                    type={values.showPassword ? 'text' : 'password'}\n                    value={values.password}\n                    name=\"password\"\n                    onChange={handleChange('password')}\n                    autoComplete=\"current-password\"\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={handleClickShowPassword}\n                          onMouseDown={handleMouseDownPassword}\n                          edge=\"end\"\n                          aria-describedby=\"component-error-text\"\n                        >\n                          {values.showPassword ? (\n                            <VisibilityOff />\n                          ) : (\n                            <Visibility />\n                          )}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                    label=\"Password\"\n                  />\n                  {errors.password && (\n                    <FormHelperText id=\"component-error-text\">\n                      {errors.password}\n                    </FormHelperText>\n                  )}\n                </Field>\n                <Button\n                  fullWidth\n                  type=\"submit\"\n                  variant=\"contained\"\n                  sx={{ mt: '40px' }}\n                >\n                  Log In\n                </Button>\n              </Form>\n            )}\n          </Formik>\n          <Grid container sx={{ mt: 2 }}>\n            <Grid item xs>\n              <Typography variant=\"body2\">\n                <NavLink>Forgot password?</NavLink>\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"body2\">\n                <NavLink to=\"/register\">\n                  {\"Don't have an account? Sign Up\"}\n                </NavLink>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { Grid } from '@mui/material';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <Grid container component=\"main\" sx={{ justifyContent: 'space-around' }}>\n      <HelmetProvider>\n        <Helmet>\n          <title>Login</title>\n        </Helmet>\n      </HelmetProvider>\n      <LoginForm />\n    </Grid>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;"],"names":["LoginForm","React","amount","password","weight","weightRange","showPassword","values","setValues","emailInputId","nanoid","passwordInputId","dispatch","useDispatch","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Grid","sx","mt","item","xs","sm","md","component","Paper","elevation","square","Box","py","px","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","onSubmit","value","actions","body","email","logIn","resetForm","initialValues","validationSchema","yup","shape","required","prop","errors","touched","autoComplete","as","TextField","fullWidth","id","label","name","placeholder","type","error","Boolean","helperText","FormControl","helpertext","InputLabel","htmlFor","OutlinedInput","onChange","target","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility","FormHelperText","Button","container","to","Login","justifyContent","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}